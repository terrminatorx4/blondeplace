name: ALPHA-STRIKE v5.30-ULTRA-OPTIMIZED-FINAL (–ò–°–ü–†–ê–í–õ–ï–ù–ê –ú–ê–¢–ï–ú–ê–¢–ò–ö–ê)

on:
  workflow_dispatch:
    inputs:
      target_articles:
        description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏'
        required: true
        default: '30'
        type: string
      threads:
        description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤ (1-20)'
        required: true
        default: '20'
        type: choice
        options:
          - '5'
          - '10'
          - '15'
          - '20'
      model_choice:
        description: '–í—ã–±–æ—Ä AI –º–æ–¥–µ–ª–∏'
        required: true
        default: 'gemini'
        type: choice
        options:
        - gemini
        - openrouter

jobs:
  # –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–π job –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ç—Ä–∏—Ü—ã –ø–æ—Ç–æ–∫–æ–≤
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}
      articles-per-thread: ${{ steps.calculate.outputs.articles-per-thread }}
    steps:
    - name: Create thread matrix
      id: create-matrix
      run: |
        THREADS=${{ github.event.inputs.threads }}
        MATRIX="["
        for i in $(seq 1 $THREADS); do
          if [ $i -eq 1 ]; then
            MATRIX="${MATRIX}${i}"
          else
            MATRIX="${MATRIX},${i}"
          fi
        done
        MATRIX="${MATRIX}]"
        echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
        echo "–°–æ–∑–¥–∞–Ω–∞ –º–∞—Ç—Ä–∏—Ü–∞ –ø–æ—Ç–æ–∫–æ–≤: $MATRIX"
    - name: Calculate articles per thread
      id: calculate
      run: |
        TARGET_ARTICLES=${{ github.event.inputs.target_articles }}
        THREADS=${{ github.event.inputs.threads }}
        ARTICLES_PER_THREAD=$(( TARGET_ARTICLES / THREADS ))
        if [ $(( TARGET_ARTICLES % THREADS )) -ne 0 ]; then
          ARTICLES_PER_THREAD=$(( ARTICLES_PER_THREAD + 1 ))
        fi
        echo "articles-per-thread=$ARTICLES_PER_THREAD" >> $GITHUB_OUTPUT
        echo "–°—Ç–∞—Ç–µ–π –Ω–∞ –ø–æ—Ç–æ–∫: $ARTICLES_PER_THREAD"

  alpha-strike-attack:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    strategy:
      max-parallel: 20
      fail-fast: false  # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï –æ—Ç–º–µ–Ω—è—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ jobs –ø—Ä–∏ —Å–±–æ–µ –æ–¥–Ω–æ–≥–æ
      matrix:
        thread-id: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Cache clear for new alpha-factory version
      run: |
        echo "üîÑ –û–ß–ò–°–¢–ö–ê –ö–≠–®–ê –¥–ª—è v5.30-ULTRA-OPTIMIZED-FIXED"
        rm -rf node_modules package-lock.json 2>/dev/null || true

    - name: Install dependencies
      run: npm install --force

    - name: Parse API keys and setup environment
      run: |
        echo "üîß –ù–ê–°–¢–†–û–ô–ö–ê API –ö–õ–Æ–ß–ï–ô –¥–ª—è –ø–æ—Ç–æ–∫–∞ ${{ matrix.thread-id }}"
        
        # –í—ã—á–∏—Å–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –∫–ª—é—á–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞ (—Ü–∏–∫–ª–∏—á–Ω–æ)
        THREAD_ID=${{ matrix.thread-id }}
        KEY_INDEX=$(( (THREAD_ID - 1) % 20 + 1 ))
        
        echo "Thread: $THREAD_ID, Key Index: $KEY_INDEX"
        
        # –ü–∞—Ä—Å–∏–Ω–≥ –∫–ª—é—á–µ–π –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
        KEYS_POOL="${{ secrets.GEMINI_API_KEYS_POOL }}"
        API_KEY=$(echo "$KEYS_POOL" | tr ',' '\n' | sed -n "${KEY_INDEX}p" | xargs)
        
        if [ -z "$API_KEY" ]; then
          echo "‚ùå API –∫–ª—é—á #$KEY_INDEX –Ω–µ –Ω–∞–π–¥–µ–Ω!"
          exit 1
        fi
        
        echo "‚úÖ API –∫–ª—é—á #$KEY_INDEX –ø–æ–ª—É—á–µ–Ω: ...${API_KEY: -4}"
        echo "GEMINI_API_KEY_CURRENT=$API_KEY" >> $GITHUB_ENV
        echo "MODEL_CHOICE=${{ github.event.inputs.model_choice }}" >> $GITHUB_ENV

    - name: üõ°Ô∏è –ò–°–ü–†–ê–í–õ–ï–ù–û Alpha-Strike Generation (–±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏)
      run: |
        echo "üéØ –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread-id }}: –ù–∞—á–∏–Ω–∞—é Alpha-Strike –∞—Ç–∞–∫—É!"
        echo "üìä –°—Ç–∞—Ç–µ–π –Ω–∞ –ø–æ—Ç–æ–∫: ${{ needs.prepare-matrix.outputs.articles-per-thread }}"
        echo "ü§ñ –ú–æ–¥–µ–ª—å: ${{ github.event.inputs.model_choice }}"
        echo "üéØ SEO: PERFECT (Title: 40-45, Description: 150-164, Keywords: ‚úÖ)"
        echo "üõ°Ô∏è –ù–£–ú–ï–†–ê–¶–ò–Ø: –ë–ï–ó–û–ü–ê–°–ù–ê–Ø (30000+ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏!)"
        export THREAD_ID=${{ matrix.thread-id }}
        export TARGET_ARTICLES=${{ needs.prepare-matrix.outputs.articles-per-thread }}
        node alpha-factory-v5.30-ULTRA-OPTIMIZED-FINAL.js
      shell: /usr/bin/bash -e {0}
      env:
        GEMINI_API_KEY: ${{ env.GEMINI_API_KEY_CURRENT }}
        MODEL_CHOICE: ${{ env.MODEL_CHOICE }}
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: ULTRA BUTLER GIT STRATEGY (Increased delays)
      run: |
        echo "ü§ñ Thread ${{ matrix.thread-id }}: –ò—Å–ø–æ–ª—å–∑—É—é ULTRA BUTLER git —Å—Ç—Ä–∞—Ç–µ–≥–∏—é..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
        if [ -n "$(git status --porcelain)" ]; then
          echo "üî• Thread ${{ matrix.thread-id }}: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã. ULTRA BUTLER —Å—Ç—Ä–∞—Ç–µ–≥–∏—è..."
          
          # –£–í–ï–õ–ò–ß–ï–ù–ù–ê–Ø –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞: 30-90 —Å–µ–∫—É–Ω–¥
          INITIAL_DELAY=$((30 + RANDOM % 60))
          echo "‚è∞ Thread ${{ matrix.thread-id }}: –£–í–ï–õ–ò–ß–ï–ù–ù–ê–Ø –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ $INITIAL_DELAY —Å–µ–∫—É–Ω–¥"
          sleep $INITIAL_DELAY
          
          # ULTRA BUTLER: –¥–æ 12 –ø–æ–ø—ã—Ç–æ–∫ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
          MAX_ATTEMPTS=12
          ATTEMPT=1
          SUCCESS=false
          
          while [ $ATTEMPT -le $MAX_ATTEMPTS ] && [ "$SUCCESS" = false ]; do
            echo "üîÑ Thread ${{ matrix.thread-id }}: Ultra Butler git –ø–æ–ø—ã—Ç–∫–∞ $ATTEMPT/$MAX_ATTEMPTS"
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git –∫–∞–∫ –≤ Butler
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action (Thread ${{ matrix.thread-id }})"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ staging
            echo "üìÅ Thread ${{ matrix.thread-id }}: –î–æ–±–∞–≤–ª—è—é —Ñ–∞–π–ª—ã –≤ staging..."
            git add src/content/posts/post*.md 2>/dev/null || true
            
            # –°–æ–∑–¥–∞–µ–º stash –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (Butler strategy)
            echo "üíæ Thread ${{ matrix.thread-id }}: –°–æ–∑–¥–∞—é stash..."
            git stash --include-untracked --message "Thread ${{ matrix.thread-id }} - attempt $ATTEMPT" || true
            
            # –î–µ–ª–∞–µ–º pull –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
            echo "‚¨áÔ∏è Thread ${{ matrix.thread-id }}: –î–µ–ª–∞—é git pull..."
            git pull origin main --rebase || git pull origin main || true
            
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º stash
            echo "üì§ Thread ${{ matrix.thread-id }}: –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é stash..."
            git stash pop || true
            
            # –ü–æ–≤—Ç–æ—Ä–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –ø–æ—Å–ª–µ pull
            echo "üìÅ Thread ${{ matrix.thread-id }}: –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."
            git add src/content/posts/post*.md 2>/dev/null || true
            
            # –°–æ–∑–¥–∞–µ–º commit
            echo "üíæ Thread ${{ matrix.thread-id }}: –°–æ–∑–¥–∞—é commit..."
            COMMIT_MSG="üõ°Ô∏è Alpha-Strike v5.30-FIXED: Thread ${{ matrix.thread-id }} - $(date)"
            git commit -m "$COMMIT_MSG" || {
              echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è commit"
              SUCCESS=true
              break
            }
            
            # –ü—ã—Ç–∞–µ–º—Å—è push
            echo "‚¨ÜÔ∏è Thread ${{ matrix.thread-id }}: –û—Ç–ø—Ä–∞–≤–ª—è—é –≤ GitHub..."
            if git push origin main; then
              echo "‚úÖ Thread ${{ matrix.thread-id }}: SUCCESS! Ultra Butler git push —É—Å–ø–µ—à–µ–Ω –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ $ATTEMPT!"
              SUCCESS=true
              
              # –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —Ñ–∞–π–ª—ã –¥–æ—à–ª–∏ –¥–æ GitHub
              echo "üîç Thread ${{ matrix.thread-id }}: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê —Ñ–∞–π–ª–æ–≤ –≤ GitHub..."
              COMMITTED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD)
              echo "‚úÖ Thread ${{ matrix.thread-id }}: –ó–∞–∫–æ–º–º–∏—á–µ–Ω—ã —Ñ–∞–π–ª—ã: $COMMITTED_FILES"
              
              # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ GitHub API
              echo "üîç Thread ${{ matrix.thread-id }}: –ü—Ä–æ–≤–µ—Ä—è—é —á–µ—Ä–µ–∑ GitHub API..."
              for file in $COMMITTED_FILES; do
                if [[ $file == src/content/posts/post*.md ]]; then
                  FILENAME=$(basename "$file")
                  API_URL="https://api.github.com/repos/${{ github.repository }}/contents/$file"
                  if curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$API_URL" | grep -q '"name"'; then
                    echo "‚úÖ Thread ${{ matrix.thread-id }}: –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û: $FILENAME —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ GitHub!"
                  else
                    echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: WARNING: $FILENAME –º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤ GitHub"
                  fi
                fi
              done
              
            else
              echo "‚ùå Thread ${{ matrix.thread-id }}: Push failed –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ $ATTEMPT"
              
              # –£–í–ï–õ–ò–ß–ï–ù–ù–ê–Ø –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏: 15-60 —Å–µ–∫—É–Ω–¥
              RETRY_DELAY=$((15 + RANDOM % 45))
              echo "‚è≥ Thread ${{ matrix.thread-id }}: –ñ–¥—É $RETRY_DELAY —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π..."
              sleep $RETRY_DELAY
              
              ATTEMPT=$((ATTEMPT + 1))
            fi
          done
          
          if [ "$SUCCESS" = false ]; then
            echo "üí• Thread ${{ matrix.thread-id }}: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ $MAX_ATTEMPTS –ø–æ–ø—ã—Ç–æ–∫!"
            exit 1
          fi
          
        else
          echo "üìù Thread ${{ matrix.thread-id }}: –ù–µ—Ç –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è commit"
        fi

    - name: Final Status Report
      run: |
        echo "‚úÖ –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread-id }}: Alpha-Strike v5.30-FIXED –º–∏—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
        echo "üéØ Model: ${{ github.event.inputs.model_choice }}"
        echo "üìä Target articles: ${{ needs.prepare-matrix.outputs.articles-per-thread }}"
        echo "üéØ SEO: PERFECT OPTIMIZATION"
        echo "üõ°Ô∏è –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –ù–£–ú–ï–†–ê–¶–ò–Ø: 30000+ (0 –ø–µ—Ä–µ–∑–∞–ø–∏—Å–µ–π!)" 