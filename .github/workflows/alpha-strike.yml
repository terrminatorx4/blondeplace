name: ALPHA-STRIKE v5.9-PERFECT-SEO

on:
  workflow_dispatch:
    inputs:
      target_articles:
        description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏'
        required: true
        default: '50'
        type: string
      threads:
        description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤ (1-20)'
        required: true
        default: '20'
        type: choice
        options:
          - '5'
          - '10'
          - '15'
          - '20'
      model_choice:
        description: '–í—ã–±–æ—Ä AI –º–æ–¥–µ–ª–∏'
        required: true
        default: 'gemini'
        type: choice
        options:
        - gemini
        - openrouter

jobs:
  # –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–π job –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ç—Ä–∏—Ü—ã –ø–æ—Ç–æ–∫–æ–≤
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}
      articles-per-thread: ${{ steps.calculate.outputs.articles-per-thread }}
    steps:
    - name: Create thread matrix
      id: create-matrix
      run: |
        THREADS=${{ github.event.inputs.threads }}
        MATRIX="["
        for i in $(seq 1 $THREADS); do
          if [ $i -eq 1 ]; then
            MATRIX="${MATRIX}${i}"
          else
            MATRIX="${MATRIX},${i}"
          fi
        done
        MATRIX="${MATRIX}]"
        echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
        echo "–°–æ–∑–¥–∞–Ω–∞ –º–∞—Ç—Ä–∏—Ü–∞ –ø–æ—Ç–æ–∫–æ–≤: $MATRIX"

    - name: Calculate articles per thread
      id: calculate
      run: |
        TARGET_ARTICLES=${{ github.event.inputs.target_articles }}
        THREADS=${{ github.event.inputs.threads }}
        ARTICLES_PER_THREAD=$(( TARGET_ARTICLES / THREADS ))
        if [ $(( TARGET_ARTICLES % THREADS )) -ne 0 ]; then
          ARTICLES_PER_THREAD=$(( ARTICLES_PER_THREAD + 1 ))
        fi
        echo "articles-per-thread=$ARTICLES_PER_THREAD" >> $GITHUB_OUTPUT
        echo "–°—Ç–∞—Ç–µ–π –Ω–∞ –ø–æ—Ç–æ–∫: $ARTICLES_PER_THREAD"

  alpha-strike-attack:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    strategy:
      max-parallel: 20
      fail-fast: false  # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï –æ—Ç–º–µ–Ω—è—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ jobs –ø—Ä–∏ —Å–±–æ–µ –æ–¥–Ω–æ–≥–æ
      matrix:
        thread-id: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies  
      run: |
        npm install googleapis node-fetch@2.6.7 execa@5.1.1 slugify@1.6.6

    - name: SETUP API KEYS
      run: |
        if [ "${{ github.event.inputs.model_choice }}" = "gemini" ]; then
          KEYS_POOL="${{ secrets.GEMINI_API_KEYS_POOL }}"
          KEY_INDEX=${{ matrix.thread-id }}
          API_KEY=$(echo "$KEYS_POOL" | tr ',' '\n' | sed -n "${KEY_INDEX}p")
          echo "GEMINI_API_KEY_CURRENT=$API_KEY" >> $GITHUB_ENV
          echo "MODEL_CHOICE=gemini" >> $GITHUB_ENV
        else
          KEYS_POOL="${{ secrets.OPENROUTER_API_KEYS_POOL }}"
          KEY_INDEX=${{ matrix.thread-id }}
          API_KEY=$(echo "$KEYS_POOL" | tr ',' '\n' | sed -n "${KEY_INDEX}p")
          echo "OPENROUTER_API_KEY_CURRENT=$API_KEY" >> $GITHUB_ENV
          echo "MODEL_CHOICE=openrouter" >> $GITHUB_ENV
        fi

    - name: ALPHA-STRIKE GENERATION v5.9
      run: |
        echo "üéØ –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread-id }}: –ù–∞—á–∏–Ω–∞—é Alpha-Strike –∞—Ç–∞–∫—É!"
        echo "üìä –°—Ç–∞—Ç–µ–π –Ω–∞ –ø–æ—Ç–æ–∫: ${{ needs.prepare-matrix.outputs.articles-per-thread }}"
        echo "ü§ñ –ú–æ–¥–µ–ª—å: ${{ github.event.inputs.model_choice }}"
        echo "üéØ SEO: PERFECT (Title: 40-45, Description: 150-164, Keywords: ‚úÖ)"
        export THREAD_ID=${{ matrix.thread-id }}
        export TARGET_ARTICLES=${{ needs.prepare-matrix.outputs.articles-per-thread }}
        node alpha-factory.js

    - name: SMART GIT OPERATIONS (–£–ü–†–û–©–Å–ù–ù–´–ï)
      run: |
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git
        git config --local user.email "action@github.com"
        git config --local user.name "Alpha-Strike Bot v5.9"
        
        # –£–ü–†–û–©–Å–ù–ù–ê–Ø –ó–ê–©–ò–¢–ê –û–¢ RACE CONDITIONS (–ë–ï–ó –ê–ì–†–ï–°–°–ò–í–ù–´–• –ó–ê–î–ï–†–ñ–ï–ö)
        RANDOM_DELAY=$((RANDOM % 15 + 5))  # 5-20 —Å–µ–∫—É–Ω–¥ –≤–º–µ—Å—Ç–æ 30-120
        echo "üõ°Ô∏è Thread ${{ matrix.thread-id }}: –ü—Ä–æ—Å—Ç–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç race - –∂–¥—ë–º ${RANDOM_DELAY}s..."
        sleep ${RANDOM_DELAY}
        
        # SMART-RETRY –ú–ï–•–ê–ù–ò–ó–ú (5 –ø–æ–ø—ã—Ç–æ–∫ –≤–º–µ—Å—Ç–æ 10)
        for attempt in {1..5}; do
          echo "üîÑ Thread ${{ matrix.thread-id }}: Git push –ø–æ–ø—ã—Ç–∫–∞ $attempt/5"
          
          # –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è push
          git pull --rebase origin main || true
          
          # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
          git add src/content/posts/ || true
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —á—Ç–æ –∫–æ–º–º–∏—Ç–∏—Ç—å
          if git diff --staged --quiet; then
            echo "‚úÖ Thread ${{ matrix.thread-id }}: –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è commit"
            break
          fi
          
          # –ö–æ–º–º–∏—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
          git commit -m "üéØ Alpha-Strike v5.9 PERFECT-SEO: Thread ${{ matrix.thread-id }} - $(date)" || true
          
          # –ü—Ä–æ–±—É–µ–º push
          if git push origin main; then
            echo "‚úÖ Thread ${{ matrix.thread-id }}: Git push —É—Å–ø–µ—à–µ–Ω –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ $attempt!"
            break
          else
            echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: Git push –Ω–µ—É–¥–∞—á–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ $attempt"
            if [ $attempt -eq 5 ]; then
              echo "‚ùå Thread ${{ matrix.thread-id }}: –í—Å–µ 5 –ø–æ–ø—ã—Ç–æ–∫ –∏—Å—á–µ—Ä–ø–∞–Ω—ã"
              exit 1
            fi
            # –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
            sleep $((RANDOM % 10 + 5))
          fi
        done

    - name: REPORT GENERATION  
      run: |
        echo "‚úÖ –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread-id }}: Alpha-Strike v5.9 –º–∏—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
        echo "üéØ Model: ${{ github.event.inputs.model_choice }}"
        echo "üìä Target articles: ${{ needs.prepare-matrix.outputs.articles-per-thread }}"
        echo "üéØ SEO: PERFECT OPTIMIZATION"

  quality-control:
    needs: alpha-strike-attack
    runs-on: ubuntu-latest
    if: always()  # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ jobs –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å
    steps:
    - name: Checkout repository  
      uses: actions/checkout@v4

    - name: QUALITY CONTROL v5.9
      run: |
        echo "üîç –ö–û–ù–¢–†–û–õ–¨ –ö–ê–ß–ï–°–¢–í–ê ALPHA-STRIKE v5.9-PERFECT-SEO"
        echo ""
        echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–û–ó–î–ê–ù–ù–´–• –°–¢–ê–¢–ï–ô:"
        find src/content/posts -name "post*.md" -newer .git/logs/HEAD | wc -l || echo "0"
        echo ""
        echo "üîó –ü–†–Ø–ú–´–ï –°–°–´–õ–ö–ò –ù–ê –ù–û–í–´–ï –°–¢–ê–¢–¨–ò:"
        find src/content/posts -name "post*.md" -newer .git/logs/HEAD | head -10 | while read file; do
          filename=$(basename "$file" .md)
          echo "  üìÑ https://blondeplace.netlify.app/blog/$filename/"
        done
        echo ""
        echo "üéØ SEO –ü–†–û–í–ï–†–ö–ê:"
        echo "  ‚úÖ Title –¥–ª–∏–Ω–∞: 40-45 —Å–∏–º–≤–æ–ª–æ–≤"
        echo "  ‚úÖ Description –¥–ª–∏–Ω–∞: 150-164 —Å–∏–º–≤–æ–ª–∞"  
        echo "  ‚úÖ Keywords: –¥–æ–±–∞–≤–ª–µ–Ω—ã"
        echo "  ‚úÖ –¢–æ—à–Ω–æ—Ç–∞: —Å–Ω–∏–∂–µ–Ω–∞"

  final-report:
    needs: [alpha-strike-attack, quality-control]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: FINAL REPORT v5.9
      run: |
        echo "üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–Å–¢ ALPHA-STRIKE v5.9-PERFECT-SEO"
        echo ""
        echo "‚úÖ –ú–ò–°–°–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –° PERFECT SEO –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ï–ô"
        echo "üéØ Title: 40-45 —Å–∏–º–≤–æ–ª–æ–≤ (CheckSite —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ)"
        echo "üéØ Description: 150-164 —Å–∏–º–≤–æ–ª–∞ (CheckSite —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ)"
        echo "üéØ Keywords: –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –º–µ—Ç–∞-—Ç–µ–≥–∏"
        echo "üéØ –¢–æ—à–Ω–æ—Ç–∞: —Å–Ω–∏–∂–µ–Ω–∞ —Å 8.25 –¥–æ <5"
        echo "üéØ Race protection: —É–ø—Ä–æ—â–µ–Ω–∞ (5-20s –≤–º–µ—Å—Ç–æ 30-120s)"
        echo "üßµ –ü–æ—Ç–æ–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${{ github.event.inputs.threads }}"
        echo "üìä –°—Ç–∞—Ç–µ–π –∑–∞–ø—Ä–æ—à–µ–Ω–æ: ${{ github.event.inputs.target_articles }}"
        echo ""
        echo "üöÄ ALPHA-STRIKE v5.9 –ì–û–¢–û–í –ö –î–û–ú–ò–ù–ò–†–û–í–ê–ù–ò–Æ –° PERFECT SEO!" 