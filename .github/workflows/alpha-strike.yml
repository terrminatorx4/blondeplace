name: üöÄüí• –ü–õ–ê–ù "–ê–õ–¨–§–ê-–£–î–ê–†" v2.0 - –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø

on:
  workflow_dispatch:
    inputs:
      target_articles:
        description: '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π'
        required: false
        default: '600'
        type: choice
        options:
        - '600'    # –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: 20 –ø–æ—Ç–æ–∫–æ–≤ √ó 30 —Å—Ç–∞—Ç–µ–π
        - '1000'   # –°—Ä–µ–¥–Ω–∏–π —Ä–µ–∂–∏–º: 20 –ø–æ—Ç–æ–∫–æ–≤ √ó 50 —Å—Ç–∞—Ç–µ–π  
        - '2000'   # –ë–æ–ª—å—à–æ–π —Ä–µ–∂–∏–º: 20 –ø–æ—Ç–æ–∫–æ–≤ √ó 100 —Å—Ç–∞—Ç–µ–π
        - '5000'   # –ü–æ–ª–Ω—ã–π —Ä–µ–∂–∏–º: 20 –ø–æ—Ç–æ–∫–æ–≤ √ó 250 —Å—Ç–∞—Ç–µ–π
      threads:
        description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤'
        required: false
        default: '20'
        type: choice
        options:
        - '5'
        - '10'
        - '20'
      model_choice:
        description: '–ú–æ–¥–µ–ª—å AI'
        required: false
        default: 'gemini'
        type: choice
        options:
        - gemini
        - deepseek
      start_from_thread:
        description: '–ù–∞—á–∞—Ç—å —Å –ø–æ—Ç–æ–∫–∞ (–¥–ª—è —á–∞—Å—Ç–∏—á–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤)'
        required: false
        default: '1'

env:
  NODE_VERSION: '18'

jobs:
  alpha-strike-preparation:
    name: üéØ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –±–æ–µ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ v2.0
    runs-on: ubuntu-latest
    outputs:
      articles-per-thread: ${{ steps.calc.outputs.articles-per-thread }}
      thread-matrix: ${{ steps.calc.outputs.thread-matrix }}
      expected-links: ${{ steps.calc.outputs.expected-links }}
    
    steps:
    - name: üìä –†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∞—Ç–∞–∫–∏
      id: calc
      run: |
        TOTAL_ARTICLES=${{ github.event.inputs.target_articles || '600' }}
        TOTAL_THREADS=${{ github.event.inputs.threads || '20' }}
        START_FROM=${{ github.event.inputs.start_from_thread || '1' }}
        
        ARTICLES_PER_THREAD=$((TOTAL_ARTICLES / TOTAL_THREADS))
        EXPECTED_LINKS=$((TOTAL_ARTICLES * 80))
        
        echo "articles-per-thread=$ARTICLES_PER_THREAD" >> $GITHUB_OUTPUT
        echo "expected-links=$EXPECTED_LINKS" >> $GITHUB_OUTPUT
        
        # –°–æ–∑–¥–∞–µ–º –º–∞—Ç—Ä–∏—Ü—É –ø–æ—Ç–æ–∫–æ–≤ —Å —É—á–µ—Ç–æ–º start_from
        THREAD_ARRAY="["
        FIRST=true
        for i in $(seq $START_FROM $TOTAL_THREADS); do
          if [ "$FIRST" = true ]; then
            FIRST=false
          else
            THREAD_ARRAY="$THREAD_ARRAY,"
          fi
          THREAD_ARRAY="$THREAD_ARRAY$i"
        done
        THREAD_ARRAY="$THREAD_ARRAY]"
        
        echo "thread-matrix=$THREAD_ARRAY" >> $GITHUB_OUTPUT
        
        echo "üéØ –ü–õ–ê–ù –ê–õ–¨–§–ê-–£–î–ê–† v2.0 –ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù:"
        echo "üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π: $TOTAL_ARTICLES"
        echo "‚ö° –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤: $TOTAL_THREADS"
        echo "üöÄ –ù–∞—á–∞—Ç—å —Å –ø–æ—Ç–æ–∫–∞: $START_FROM" 
        echo "üìù –°—Ç–∞—Ç–µ–π –Ω–∞ –ø–æ—Ç–æ–∫: $ARTICLES_PER_THREAD"
        echo "üîó –û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Å—ã–ª–æ–∫: $EXPECTED_LINKS"
        echo "üéØ –¶–µ–ª–µ–≤–æ–π —Å–∞–π—Ç: https://blondeplace.ru"

  alpha-strike-attack:
    name: üí• –ë–æ–µ–≤–æ–π –ø–æ—Ç–æ–∫ #${{ matrix.thread-id }}
    runs-on: ubuntu-latest
    needs: alpha-strike-preparation
    
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        thread-id: ${{ fromJson(needs.alpha-strike-preparation.outputs.thread-matrix) }}
    
    steps:
    - name: üîÑ Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: ‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        npm ci
        echo "üîß –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –ø–æ—Ç–æ–∫–∞ #${{ matrix.thread-id }}"

    - name: üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
      run: |
        mkdir -p src/content/posts
        echo "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞: src/content/posts"

    - name: üöÄüí• –ó–ê–ü–£–°–ö –ê–õ–¨–§–ê-–£–î–ê–†–ê v2.0 #${{ matrix.thread-id }}
      env:
        THREAD_ID: ${{ matrix.thread-id }}
        ALPHA_ARTICLES: ${{ needs.alpha-strike-preparation.outputs.articles-per-thread }}
        MODEL_CHOICE: ${{ github.event.inputs.model_choice || 'gemini' }}
        API_KEY_CURRENT: ${{ secrets.GEMINI_API_KEY_1 }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        echo "üöÄüí• [–ü–û–¢–û–ö #${{ matrix.thread-id }}] –ù–ê–ß–ê–õ–û –ë–û–ï–í–û–ô –û–ü–ï–†–ê–¶–ò–ò v2.0"
        echo "üéØ –¶–µ–ª—å: ${{ needs.alpha-strike-preparation.outputs.articles-per-thread }} —Å—Ç–∞—Ç–µ–π"
        echo "ü§ñ –ú–æ–¥–µ–ª—å: ${{ github.event.inputs.model_choice || 'gemini' }}"
        echo "üîë API –∫–ª—é—á: ...$(echo $API_KEY_CURRENT | tail -c 5)"
        echo "üìä –î–∏–∞–ø–∞–∑–æ–Ω –Ω–æ–º–µ—Ä–æ–≤ –ø–æ—Å—Ç–æ–≤: $(( (${{ matrix.thread-id }} - 1) * 1000 + 1 ))-$(( ${{ matrix.thread-id }} * 1000 ))"
        
        # –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –±–æ–µ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
        node alpha-factory-fixed.js
        
        echo "‚úÖ [–ü–û–¢–û–ö #${{ matrix.thread-id }}] –ú–ò–°–°–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê"

    - name: üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Ç–æ–∫–∞ #${{ matrix.thread-id }}
      run: |
        echo "üìà –û–¢–ß–ï–¢ –ü–û –ü–û–¢–û–ö–£ #${{ matrix.thread-id }}:"
        
        # –ü–æ–¥—Å—á–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        if [ -d "src/content/posts" ]; then
          CREATED_FILES=$(find src/content/posts -name "*.md" | wc -l)
          echo "üìù –°–æ–∑–¥–∞–Ω–æ —Ñ–∞–π–ª–æ–≤ –ª–æ–∫–∞–ª—å–Ω–æ: $CREATED_FILES"
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤
          if [ $CREATED_FILES -gt 0 ]; then
            echo "üìã –†–∞–∑–º–µ—Ä—ã –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π:"
            find src/content/posts -name "*.md" -exec wc -c {} + | tail -5
            
            echo "üìè –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤:"
            find src/content/posts -name "*.md" -exec grep -l "title:" {} + | head -3 | while read file; do
              echo "=== $file ==="
              grep "title:" "$file" | head -1
              grep "description:" "$file" | head -1
            done
          fi
        else
          echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è src/content/posts –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        fi

  alpha-strike-quality-control:
    name: üîç –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞
    runs-on: ubuntu-latest
    needs: [alpha-strike-preparation, alpha-strike-attack]
    
    steps:
    - name: üîÑ Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: üîç –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      run: |
        echo "üîç –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê –ö–û–ù–¢–ï–ù–¢–ê:"
        echo "================================"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ GitHub API (—Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —á–µ—Ä–µ–∑ commitToGithub)
        GITHUB_FILES=$(find src/content/posts -name "*.md" 2>/dev/null | wc -l)
        echo "üìÅ –§–∞–π–ª–æ–≤ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $GITHUB_FILES"
        
        if [ $GITHUB_FILES -gt 0 ]; then
          echo "‚úÖ –§–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ..."
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:"
          find src/content/posts -name "*.md" -exec grep "title:" {} \; | sort | uniq -d | wc -l | {
            read DUPLICATES
            if [ $DUPLICATES -eq 0 ]; then
              echo "‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
            else
              echo "‚ùå –ù–∞–π–¥–µ–Ω–æ $DUPLICATES –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤"
            fi
          }
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –æ–ø–∏—Å–∞–Ω–∏–π
          echo "üìè –ê–Ω–∞–ª–∏–∑ –¥–ª–∏–Ω—ã –º–µ—Ç–∞-—Ç–µ–≥–æ–≤:"
          find src/content/posts -name "*.md" | head -10 | while read file; do
            title_length=$(grep "title:" "$file" | sed 's/title: "//' | sed 's/".*//' | wc -c)
            desc_length=$(grep "description:" "$file" | sed 's/description: "//' | sed 's/".*//' | wc -c)
            echo "üìÑ $(basename $file): Title=${title_length}chars, Desc=${desc_length}chars"
          done
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å—Å—ã–ª–æ–∫
          echo "üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç:"
          LINKS_COUNT=$(find src/content/posts -name "*.md" -exec grep -c "blondeplace.ru" {} \; | awk '{sum+=$1} END {print sum}')
          echo "üîó –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Å—ã–ª–æ–∫ –Ω–∞ blondeplace.ru: $LINKS_COUNT"
          
        else
          echo "‚ùå –§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
        fi

  alpha-strike-final-report:
    name: üèÜ –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏
    runs-on: ubuntu-latest
    needs: [alpha-strike-preparation, alpha-strike-attack, alpha-strike-quality-control]
    
    steps:
    - name: üîÑ Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: üèÜ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
      run: |
        echo "üèÜ –ü–õ–ê–ù '–ê–õ–¨–§–ê-–£–î–ê–†' v2.0 –ó–ê–í–ï–†–®–ï–ù!"
        echo "=================================="
        
        TARGET_ARTICLES=${{ github.event.inputs.target_articles || '600' }}
        EXPECTED_LINKS=${{ needs.alpha-strike-preparation.outputs.expected-links }}
        
        echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–ü–ï–†–ê–¶–ò–ò:"
        echo "üéØ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: $TARGET_ARTICLES"
        echo "‚ö° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–æ—Ç–æ–∫–æ–≤: ${{ github.event.inputs.threads || '20' }}"
        echo "ü§ñ –ú–æ–¥–µ–ª—å AI: ${{ github.event.inputs.model_choice || 'gemini' }}"
        echo "üîó –û–∂–∏–¥–∞–µ–º–æ —Å—Å—ã–ª–æ–∫: $EXPECTED_LINKS"
        
        echo ""
        echo "üéØ –¶–ï–õ–ò –û–ü–ï–†–ê–¶–ò–ò:"
        echo "‚úÖ –ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ blondeplace.ru –ø–æ 8 –∫–ª—é—á–µ–≤—ã–º —Ñ—Ä–∞–∑–∞–º:"
        echo "   ‚Ä¢ –±—å—é—Ç–∏ –∫–æ–≤–æ—Ä–∫–∏–Ω–≥"
        echo "   ‚Ä¢ –∞—Ä–µ–Ω–¥–∞ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–æ–≥–æ –∫—Ä–µ—Å–ª–∞"
        echo "   ‚Ä¢ –∫–æ–≤–æ—Ä–∫–∏–Ω–≥ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞"
        echo "   ‚Ä¢ –º–µ—Å—Ç–∞ –≤ –∞—Ä–µ–Ω–¥—É"
        echo "   ‚Ä¢ –∫—Ä–µ—Å–ª–æ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞"
        echo "   ‚Ä¢ —Å–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã"
        echo "   ‚Ä¢ –º–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ"
        echo "   ‚Ä¢ —Ç–æ—Ç–∞–ª –±–ª–æ–Ω–¥"
        
        echo ""
        echo "üìà –û–ñ–ò–î–ê–ï–ú–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:"
        echo "‚è∞ –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å–∞—Ç–µ–ª–ª–∏—Ç–∞: 1-2 –¥–Ω—è"
        echo "üìà –†–æ—Å—Ç –ø–æ–∑–∏—Ü–∏–π –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∞–π—Ç–∞: 4-7 –¥–Ω–µ–π"
        echo "üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ç–æ–ø-10: 1-2 –Ω–µ–¥–µ–ª–∏"
        echo "üéØ –¶–µ–ª—å: –¢–û–ü-1 –ø–æ –≤—Å–µ–º –∫–ª—é—á–µ–≤—ã–º —Ñ—Ä–∞–∑–∞–º"
        
        echo ""
        echo "‚ö†Ô∏è  –í–ê–ñ–ù–´–ï –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–Ø:"
        echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ø–æ–∑–∏—Ü–∏–∏ blondeplace.ru –µ–∂–µ–¥–Ω–µ–≤–Ω–æ"
        echo "üì± –°–ª–µ–¥–∏—Ç–µ –∑–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–µ–π –≤ –Ø–Ω–¥–µ–∫—Å.–í–µ–±–º–∞—Å—Ç–µ—Ä"
        echo "üîÑ –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∞—Ç–∞–∫–∏"
        echo "üõ°Ô∏è  –ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –≤–æ–∑–º–æ–∂–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ —Å–∞—Ç–µ–ª–ª–∏—Ç–∞"
        
        echo ""
        echo "üéä –û–ü–ï–†–ê–¶–ò–Ø '–ê–õ–¨–§–ê-–£–î–ê–†' v2.0 –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê!"

    - name: üì± –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞
      run: |
        cat > ALPHA_STRIKE_REPORT.md << 'EOF'
# üöÄüí• –û–¢–ß–ï–¢ –ü–û –û–ü–ï–†–ê–¶–ò–ò "–ê–õ–¨–§–ê-–£–î–ê–†" v2.0

## üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø–µ—Ä–∞—Ü–∏–∏
- **–°—Ç–∞—Ç–µ–π —Å–æ–∑–¥–∞–Ω–æ**: ${{ github.event.inputs.target_articles || '600' }}
- **–ü–æ—Ç–æ–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ**: ${{ github.event.inputs.threads || '20' }}
- **–ú–æ–¥–µ–ª—å AI**: ${{ github.event.inputs.model_choice || 'gemini' }}
- **–û–∂–∏–¥–∞–µ–º–æ —Å—Å—ã–ª–æ–∫**: ${{ needs.alpha-strike-preparation.outputs.expected-links }}
- **–î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏**: $(date)

## üéØ –¶–µ–ª–µ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã
1. –±—å—é—Ç–∏ –∫–æ–≤–æ—Ä–∫–∏–Ω–≥
2. –∞—Ä–µ–Ω–¥–∞ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–æ–≥–æ –∫—Ä–µ—Å–ª–∞
3. –∫–æ–≤–æ—Ä–∫–∏–Ω–≥ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞
4. –º–µ—Å—Ç–∞ –≤ –∞—Ä–µ–Ω–¥—É
5. –∫—Ä–µ—Å–ª–æ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞
6. —Å–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã
7. –º–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
8. —Ç–æ—Ç–∞–ª –±–ª–æ–Ω–¥

## üìà –ü–ª–∞–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
- **–î–µ–Ω—å 1-2**: –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ —Å–∞—Ç–µ–ª–ª–∏—Ç–∞
- **–î–µ–Ω—å 4-7**: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–æ—Å—Ç–∞ –ø–æ–∑–∏—Ü–∏–π –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∞–π—Ç–∞
- **–ù–µ–¥–µ–ª—è 1-2**: –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ç–æ–ø-10
- **–¶–µ–ª—å**: –¢–û–ü-1 –ø–æ –≤—Å–µ–º –∫–ª—é—á–µ–≤—ã–º —Ñ—Ä–∞–∑–∞–º

## ‚ö†Ô∏è –°—Ç–∞—Ç—É—Å —Å–∞—Ç–µ–ª–ª–∏—Ç–∞
- **–î–æ–º–µ–Ω**: blondeplace.netlify.app
- **–°—Ç–∞—Ç—É—Å**: –†–∞—Å—Ö–æ–¥–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª
- **–†–∏—Å–∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏**: –í—ã—Å–æ–∫–∏–π (–ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π)
- **–û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç**: blondeplace.ru (–∑–∞—â–∏—â–µ–Ω)

---
*–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏—Å—Ç–µ–º–æ–π –ê–õ–¨–§–ê-–£–î–ê–† v2.0*
EOF
        
        echo "üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ALPHA_STRIKE_REPORT.md" 