name: üöÄ BlondePlace Beauty Factory (MEGA POWER)

on:
  workflow_dispatch:
    inputs:
      model_choice:
        description: '–í—ã–±–æ—Ä AI –º–æ–¥–µ–ª–∏'
        required: true
        default: 'gemini'
        type: choice
        options:
        - gemini
        - openrouter
      batch_size_per_thread:
        description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –Ω–∞ –ø–æ—Ç–æ–∫'
        required: true
        default: '5'
        type: string
      threads:
        description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤'
        required: true
        default: '10'
        type: string

env:
  NODE_VERSION: '18'

jobs:
  beauty-content-generation:
    name: üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Beauty –ö–æ–Ω—Ç–µ–Ω—Ç–∞ (BEAUTY –ü–û–¢–û–ö #${{ matrix.thread }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        thread: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
      max-parallel: 20
      fail-fast: false
    
    if: matrix.thread <= fromJSON(github.event.inputs.threads || '10')
    
    steps:
      - name: üõí Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üèóÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: |
          npm ci
          npm list --depth=0

      - name: üîë Setup API Keys
        id: set_key
        run: |
          if [ "${{ github.event.inputs.model_choice }}" == "gemini" ]; then
            echo "key=${{ secrets.GEMINI_API_KEY }}" >> $GITHUB_OUTPUT
          else
            echo "key=${{ secrets.OPENROUTER_API_KEY }}" >> $GITHUB_OUTPUT
          fi

      - name: üé® Run Beauty Factory & üì¢ Publish & Notify (Thread ${{ matrix.thread }})
        env:
          MODEL_CHOICE: ${{ github.event.inputs.model_choice || 'gemini' }}
          API_KEY_CURRENT: ${{ steps.set_key.outputs.key }}
          BATCH_SIZE: ${{ github.event.inputs.batch_size_per_thread || 5 }}
          TOTAL_THREADS: ${{ github.event.inputs.threads || 3 }}
          THREAD_ID: ${{ matrix.thread }}
        run: |
          git config --global user.name 'BlondePlace Beauty Bot'
          git config --global user.email 'beauty-bot@blondeplace.ru'
          git config --global pull.rebase false
          
          echo "--- üé® BEAUTY –ü–û–¢–û–ö #${{ matrix.thread }}: –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é beauty –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ---"
          
          npm run factory
          
          if [[ -z $(git status --porcelain) ]]; then
            echo "‚úÖ üé® BEAUTY –ü–û–¢–û–ö #${{ matrix.thread }}: –ù–æ–≤—ã—Ö beauty —Å—Ç–∞—Ç–µ–π –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. Beauty –º–∏—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
            exit 0
          fi

          echo "üî• üé® BEAUTY –ü–û–¢–û–ö #${{ matrix.thread }}: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏ –æ –∫—Ä–∞—Å–æ—Ç–µ. –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏..."
          
          MAX_RETRIES=5
          RETRY_DELAY=5
          for ((i=1; i<=MAX_RETRIES; i++)); do
            # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ staging
            git add src/content/posts/*.md
            
            # Stash –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —á–∏—Å—Ç–æ–≥–æ pull
            git stash push -m "Temporary stash for pull - Beauty Thread ${{ matrix.thread }}"
            
            # –î–µ–ª–∞–µ–º pull
            git pull origin main
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            git stash pop || echo "Stash already applied"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã —Å–Ω–æ–≤–∞ (–Ω–∞ —Å–ª—É—á–∞–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤)
            git add src/content/posts/*.md
            
            # –ö–æ–º–º–∏—Ç–∏–º
            git commit -m "üíÑ –ê–≤—Ç–æ-–ø—É–±–ª–∏–∫–∞—Ü–∏—è beauty —Å—Ç–∞—Ç–µ–π: –ø–æ—Ç–æ–∫ ‚Ññ${{ matrix.thread }} | BlondePlace" || echo "Nothing to commit"
            
            if git push; then
              echo "‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è beauty –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ —Å –ø–æ–ø—ã—Ç–∫–∏ ‚Ññ$i."
              break
            else
              if [ "$i" -eq "$MAX_RETRIES" ]; then
                echo "::error::–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å beauty —Å—Ç–∞—Ç—å–∏ –ø–æ—Å–ª–µ $MAX_RETRIES –ø–æ–ø—ã—Ç–æ–∫."
                exit 1
              fi
              echo "[!] –ö–æ–Ω—Ñ–ª–∏–∫—Ç! –ü–æ–ø—ã—Ç–∫–∞ ‚Ññ$i –Ω–µ —É–¥–∞–ª–∞—Å—å. –ñ–¥—É ${RETRY_DELAY}—Å –∏ –ø—Ä–æ–±—É—é —Å–Ω–æ–≤–∞..."
              git reset --hard HEAD~1
              sleep $RETRY_DELAY
            fi
          done
          
          commit_after=$(git rev-parse HEAD)
          commit_before=$(git rev-parse HEAD~1)
          
          NEW_FILES=$(git diff --name-only $commit_before $commit_after -- 'src/content/posts/*.md' 2>/dev/null || echo "")
          
          if [[ -n "$NEW_FILES" ]]; then
            echo "üì¢ üé® BEAUTY –ü–û–¢–û–ö #${{ matrix.thread }}: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è IndexNow..."
            API_KEY="d1b055ab1eb146d892169bbb2c96550e"
            HOST="blondeplace-blog.netlify.app"

            URL_JSON_ARRAY=$(for file in $NEW_FILES; do slug=$(basename "$file" .md); echo "https://blondeplace-blog.netlify.app/blog/${slug}/"; done | jq -R . | jq -s .)

            JSON_PAYLOAD=$(jq -n \
                            --arg host "$HOST" \
                            --arg key "$API_KEY" \
                            --argjson urls "$URL_JSON_ARRAY" \
                            '{host: $host, key: $key, urlList: $urls}')
            
            echo "--- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–∞–∫–µ—Ç–∞ –¥–ª—è IndexNow (Beauty –ü–æ—Ç–æ–∫ ‚Ññ${{ matrix.thread }}) ---"
            echo "$JSON_PAYLOAD"
            echo "--- –ö–æ–Ω–µ—Ü –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ---"
            
            curl -X POST "https://yandex.com/indexnow" -H "Content-Type: application/json; charset=utf-8" -d "$JSON_PAYLOAD"
            curl -X POST "https://www.bing.com/indexnow" -H "Content-Type: application/json; charset=utf-8" -d "$JSON_PAYLOAD"
          fi
          
          echo -e "\n‚úÖ üé® BEAUTY –ü–û–¢–û–ö #${{ matrix.thread }}: –ú–∏—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."

  notify-completion:
    name: üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    runs-on: ubuntu-latest
    needs: beauty-content-generation
    if: always()
    
    steps:
      - name: üìä Summary
        run: |
          echo "üé® === BLONDEPLACE BEAUTY FACTORY –ó–ê–í–ï–†–®–ï–ù–ê ==="
          echo "üíÑ –ú–æ–¥–µ–ª—å: ${{ github.event.inputs.model_choice || 'gemini' }}"
          echo "üìù –°—Ç–∞—Ç–µ–π –Ω–∞ –ø–æ—Ç–æ–∫: ${{ github.event.inputs.batch_size_per_thread || 5 }}"
          echo "üßµ –ü–æ—Ç–æ–∫–æ–≤: ${{ github.event.inputs.threads || 3 }}"
          echo "üéØ –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å: ${{ needs.beauty-content-generation.result }}"
          echo ""
          echo "üè™ –ü—Ä–æ–µ–∫—Ç: BlondePlace Beauty Blog"
          echo "üåê –°–∞–π—Ç: https://blondeplace-blog.netlify.app"
          echo "üíÖ –°–∞–ª–æ–Ω: https://blondeplace.ru"
