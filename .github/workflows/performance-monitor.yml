name: üöÄ Performance Monitor & Lighthouse Audit

on:
  workflow_dispatch:
    inputs:
      test_url:
        description: 'URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        required: true
        default: 'https://butlerspb-blog.netlify.app'
      check_core_web_vitals:
        description: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å Core Web Vitals'
        type: boolean
        default: true
      lighthouse_audit:
        description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å Lighthouse –∞—É–¥–∏—Ç'
        type: boolean
        default: true
      mobile_test:
        description: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é'
        type: boolean
        default: true

jobs:
  lighthouse-audit:
    name: üîç Lighthouse Performance Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        uses: actions/checkout@v4
        
      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          npm install -g @lhci/cli lighthouse
          echo "‚úÖ Lighthouse CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
          
      - name: üöÄ Lighthouse Desktop Audit
        run: |
          echo "üñ•Ô∏è –ó–∞–ø—É—Å–∫ Lighthouse –∞—É–¥–∏—Ç–∞ –¥–ª—è Desktop..."
          lighthouse ${{ github.event.inputs.test_url }} \
            --output=json \
            --output=html \
            --output-path=./lighthouse-desktop \
            --chrome-flags="--headless --no-sandbox" \
            --preset=desktop
            
      - name: üì± Lighthouse Mobile Audit
        if: ${{ github.event.inputs.mobile_test == 'true' }}
        run: |
          echo "üì± –ó–∞–ø—É—Å–∫ Lighthouse –∞—É–¥–∏—Ç–∞ –¥–ª—è Mobile..."
          lighthouse ${{ github.event.inputs.test_url }} \
            --output=json \
            --output=html \
            --output-path=./lighthouse-mobile \
            --chrome-flags="--headless --no-sandbox"
            
      - name: üìä –ê–Ω–∞–ª–∏–∑ Core Web Vitals
        if: ${{ github.event.inputs.check_core_web_vitals == 'true' }}
        run: |
          echo "üìä –ê–Ω–∞–ª–∏–∑ Core Web Vitals..."
          # –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –∏–∑ JSON
          LCP=$(cat lighthouse-desktop.report.json | jq '.audits["largest-contentful-paint"].displayValue')
          FID=$(cat lighthouse-desktop.report.json | jq '.audits["max-potential-fid"].displayValue')
          CLS=$(cat lighthouse-desktop.report.json | jq '.audits["cumulative-layout-shift"].displayValue')
          
          echo "üéØ Core Web Vitals —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
          echo "LCP (Largest Contentful Paint): $LCP"
          echo "FID (First Input Delay): $FID" 
          echo "CLS (Cumulative Layout Shift): $CLS"
          
      - name: üìà –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ Lighthouse
        run: |
          echo "üìà –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ü–µ–Ω–∫–∏ Lighthouse..."
          PERFORMANCE=$(cat lighthouse-desktop.report.json | jq '.categories.performance.score * 100')
          ACCESSIBILITY=$(cat lighthouse-desktop.report.json | jq '.categories.accessibility.score * 100')
          PRACTICES=$(cat lighthouse-desktop.report.json | jq '.categories["best-practices"].score * 100')
          SEO=$(cat lighthouse-desktop.report.json | jq '.categories.seo.score * 100')
          
          echo "üèÜ Lighthouse Scores:"
          echo "üöÄ Performance: ${PERFORMANCE}%"
          echo "‚ôø Accessibility: ${ACCESSIBILITY}%"
          echo "‚úÖ Best Practices: ${PRACTICES}%"
          echo "üîç SEO: ${SEO}%"
          
      - name: üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: |
            lighthouse-desktop.report.html
            lighthouse-desktop.report.json
            lighthouse-mobile.report.html
            lighthouse-mobile.report.json
          retention-days: 30
          
      - name: üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä–æ–≥–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        run: |
          echo "üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º..."
          PERFORMANCE=$(cat lighthouse-desktop.report.json | jq '.categories.performance.score * 100')
          
          if (( $(echo "$PERFORMANCE >= 90" | bc -l) )); then
            echo "‚úÖ Performance –æ—Ç–ª–∏—á–Ω—ã–π: ${PERFORMANCE}%"
          elif (( $(echo "$PERFORMANCE >= 75" | bc -l) )); then
            echo "‚ö†Ô∏è Performance —Ö–æ—Ä–æ—à–∏–π: ${PERFORMANCE}%"
          else
            echo "‚ùå Performance —Ç—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è: ${PERFORMANCE}%"
            echo "::warning::Performance score —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∏–π"
          fi
          
  core-web-vitals:
    name: üìä Core Web Vitals Check
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.check_core_web_vitals == 'true' }}
    
    steps:
      - name: üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ Core Web Vitals —á–µ—Ä–µ–∑ PageSpeed API
        run: |
          echo "üåê –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ PageSpeed Insights API..."
          API_URL="https://www.googleapis.com/pagespeedonline/v5/runPagespeed"
          FULL_URL="${API_URL}?url=${{ github.event.inputs.test_url }}&category=performance"
          
          echo "üì° –ó–∞–ø—Ä–æ—Å –∫ PageSpeed API..."
          curl -s "$FULL_URL" > pagespeed-results.json
          
          # –ò–∑–≤–ª–µ–∫–∞–µ–º Core Web Vitals
          LCP=$(cat pagespeed-results.json | jq '.lighthouseResult.audits["largest-contentful-paint"].displayValue // "N/A"')
          FID=$(cat pagespeed-results.json | jq '.lighthouseResult.audits["max-potential-fid"].displayValue // "N/A"')
          CLS=$(cat pagespeed-results.json | jq '.lighthouseResult.audits["cumulative-layout-shift"].displayValue // "N/A"')
          
          echo "üéØ Real User Experience Core Web Vitals:"
          echo "üü¢ LCP: $LCP"
          echo "üü° FID: $FID"
          echo "üî¥ CLS: $CLS"
          
  seo-analysis:
    name: üîç SEO Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: üîç SEO –º–µ—Ç–∞-—Ç–µ–≥–∏ –∞–Ω–∞–ª–∏–∑
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SEO –º–µ—Ç–∞-—Ç–µ–≥–æ–≤..."
          
          # –ü–æ–ª—É—á–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
          curl -s "${{ github.event.inputs.test_url }}" > page.html
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ SEO —ç–ª–µ–º–µ–Ω—Ç—ã
          TITLE=$(grep -o '<title[^>]*>[^<]*</title>' page.html | sed 's/<[^>]*>//g')
          META_DESC=$(grep -o '<meta[^>]*name="description"[^>]*content="[^"]*"' page.html | sed 's/.*content="\([^"]*\)".*/\1/')
          
          echo "üìù SEO —ç–ª–µ–º–µ–Ω—Ç—ã:"
          echo "üè∑Ô∏è Title: $TITLE"
          echo "üìÑ Description: $META_DESC"
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã
          TITLE_LENGTH=${#TITLE}
          DESC_LENGTH=${#META_DESC}
          
          echo "üìè –î–ª–∏–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:"
          echo "Title: $TITLE_LENGTH —Å–∏–º–≤–æ–ª–æ–≤ (–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ: 50-60)"
          echo "Description: $DESC_LENGTH —Å–∏–º–≤–æ–ª–æ–≤ (–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ: 150-160)"
          
          if [ $TITLE_LENGTH -lt 30 ]; then
            echo "::warning::Title —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π"
          elif [ $TITLE_LENGTH -gt 60 ]; then
            echo "::warning::Title —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π"
          fi
          
          if [ $DESC_LENGTH -lt 120 ]; then
            echo "::warning::Description —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π"
          elif [ $DESC_LENGTH -gt 160 ]; then
            echo "::warning::Description —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π"
          fi 