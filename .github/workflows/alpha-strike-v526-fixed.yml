name: ALPHA-STRIKE v5.26-FIXED (baseNumber 200000)

on:
  workflow_dispatch:
    inputs:
      target_articles:
        description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏'
        required: true
        default: '50'
        type: string
      threads:
        description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤ (1-20)'
        required: true
        default: '20'
        type: choice
        options:
          - '5'
          - '10'
          - '15'
          - '20'
      model_choice:
        description: '–í—ã–±–æ—Ä AI –º–æ–¥–µ–ª–∏'
        required: true
        default: 'gemini'
        type: choice
        options:
        - gemini
        - openrouter

jobs:
  # –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–π job –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ç—Ä–∏—Ü—ã –ø–æ—Ç–æ–∫–æ–≤
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}
      articles-per-thread: ${{ steps.calculate.outputs.articles-per-thread }}
    steps:
    - name: Create thread matrix
      id: create-matrix
      run: |
        THREADS=${{ github.event.inputs.threads }}
        MATRIX="["
        for i in $(seq 1 $THREADS); do
          if [ $i -eq 1 ]; then
            MATRIX="${MATRIX}${i}"
          else
            MATRIX="${MATRIX},${i}"
          fi
        done
        MATRIX="${MATRIX}]"
        echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
        echo "–°–æ–∑–¥–∞–Ω–∞ –º–∞—Ç—Ä–∏—Ü–∞ –ø–æ—Ç–æ–∫–æ–≤: $MATRIX"
    - name: Calculate articles per thread
      id: calculate
      run: |
        TARGET_ARTICLES=${{ github.event.inputs.target_articles }}
        THREADS=${{ github.event.inputs.threads }}
        ARTICLES_PER_THREAD=$(( TARGET_ARTICLES / THREADS ))
        if [ $(( TARGET_ARTICLES % THREADS )) -ne 0 ]; then
          ARTICLES_PER_THREAD=$(( ARTICLES_PER_THREAD + 1 ))
        fi
        echo "articles-per-thread=$ARTICLES_PER_THREAD" >> $GITHUB_OUTPUT
        echo "–°—Ç–∞—Ç–µ–π –Ω–∞ –ø–æ—Ç–æ–∫: $ARTICLES_PER_THREAD"
  alpha-strike-attack:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    strategy:
      max-parallel: 20
      fail-fast: false  # –ö–†–ò–¢–ò–ß–ù–û: –ù–ï –æ—Ç–º–µ–Ω—è—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ jobs –ø—Ä–∏ —Å–±–æ–µ –æ–¥–Ω–æ–≥–æ
      matrix:
        thread-id: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies  
      run: |
        npm install googleapis node-fetch@2.6.7 execa@5.1.1 slugify@1.6.6
    - name: SETUP API KEYS
      run: |
        if [ "${{ github.event.inputs.model_choice }}" = "gemini" ]; then
          KEYS_POOL="${{ secrets.GEMINI_API_KEYS_POOL }}"
          KEY_INDEX=${{ matrix.thread-id }}
          API_KEY=$(echo "$KEYS_POOL" | tr ',' '\n' | sed -n "${KEY_INDEX}p")
          echo "GEMINI_API_KEY_CURRENT=$API_KEY" >> $GITHUB_ENV
          echo "MODEL_CHOICE=gemini" >> $GITHUB_ENV
        else
          KEYS_POOL="${{ secrets.OPENROUTER_API_KEYS_POOL }}"
          KEY_INDEX=${{ matrix.thread-id }}
          API_KEY=$(echo "$KEYS_POOL" | tr ',' '\n' | sed -n "${KEY_INDEX}p")
          echo "OPENROUTER_API_KEY_CURRENT=$API_KEY" >> $GITHUB_ENV
          echo "MODEL_CHOICE=openrouter" >> $GITHUB_ENV
        fi
    - name: ALPHA-STRIKE GENERATION v5.26-FIXED
      run: |
        echo "üéØ –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread-id }}: –ù–∞—á–∏–Ω–∞—é Alpha-Strike –∞—Ç–∞–∫—É!"
        echo "üìä –°—Ç–∞—Ç–µ–π –Ω–∞ –ø–æ—Ç–æ–∫: ${{ needs.prepare-matrix.outputs.articles-per-thread }}"
        echo "ü§ñ –ú–æ–¥–µ–ª—å: ${{ github.event.inputs.model_choice }}"
        echo "üéØ SEO: PERFECT (Title: 40-45, Description: 150-164, Keywords: ‚úÖ)"
        echo "ü§ñ Git —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: BUTLER STASH (–ë–ï–ó —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–∞–¥–µ—Ä–∂–µ–∫!)"
        export THREAD_ID=${{ matrix.thread-id }}
        export TARGET_ARTICLES=${{ needs.prepare-matrix.outputs.articles-per-thread }}
        node alpha-factory-v5.26-FIXED.js
      env:
        GEMINI_API_KEY_CURRENT: ${{ env.GEMINI_API_KEY_CURRENT }}
        OPENROUTER_API_KEY_CURRENT: ${{ env.OPENROUTER_API_KEY_CURRENT }}
        MODEL_CHOICE: ${{ env.MODEL_CHOICE }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: BUTLER GIT STRATEGY (ULTRA RACE PROTECTION!)
      run: |
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git –∫–∞–∫ –≤ Butler
        git config --global user.name 'Alpha-Strike Bot v5.26-FIXED'
        git config --global user.email 'actions-bot@github.com'
        git config --global pull.rebase false
        
        echo "ü§ñ Thread ${{ matrix.thread-id }}: –ò—Å–ø–æ–ª—å–∑—É—é ULTRA BUTLER git —Å—Ç—Ä–∞—Ç–µ–≥–∏—é..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if [[ -z $(git status --porcelain) ]]; then
          echo "‚úÖ Thread ${{ matrix.thread-id }}: –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è commit"
          exit 0
        fi
        
        echo "üî• Thread ${{ matrix.thread-id }}: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã. ULTRA BUTLER —Å—Ç—Ä–∞—Ç–µ–≥–∏—è..."
        
        # –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø –ù–ê–ß–ê–õ–¨–ù–ê–Ø –ó–ê–î–ï–†–ñ–ö–ê (–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞)
        RANDOM_DELAY=$((RANDOM % 60 + 30))  # 30-90 —Å–µ–∫—É–Ω–¥ (–±–æ–ª—å—à–µ!)
        echo "‚è∞ Thread ${{ matrix.thread-id }}: –£–í–ï–õ–ò–ß–ï–ù–ù–ê–Ø –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ $RANDOM_DELAY —Å–µ–∫—É–Ω–¥"
        sleep $RANDOM_DELAY
        
        # ULTRA BUTLER GIT STRATEGY (MAXIMUM ANTI-RACE PROTECTION)
        MAX_RETRIES=12  # –ï—â–µ –±–æ–ª—å—à–µ –ø–æ–ø—ã—Ç–æ–∫!
        BASE_RETRY_DELAY=15  # –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –±–∞–∑–æ–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
        
        for ((i=1; i<=MAX_RETRIES; i++)); do
          echo "üîÑ Thread ${{ matrix.thread-id }}: Ultra Butler git –ø–æ–ø—ã—Ç–∫–∞ $i/$MAX_RETRIES"
          
          # –£–í–ï–õ–ò–ß–ï–ù–ù–ê–Ø –†–ê–ù–î–û–ú–ù–ê–Ø –ó–ê–î–ï–†–ñ–ö–ê –ú–ï–ñ–î–£ –ü–û–ü–´–¢–ö–ê–ú–ò
          if [ "$i" -gt 1 ]; then
            RETRY_DELAY=$((BASE_RETRY_DELAY + (RANDOM % 45)))  # 15-60 —Å–µ–∫—É–Ω–¥
            echo "‚è∞ Thread ${{ matrix.thread-id }}: –£–í–ï–õ–ò–ß–ï–ù–ù–ê–Ø –∑–∞–¥–µ—Ä–∂–∫–∞: $RETRY_DELAY —Å–µ–∫—É–Ω–¥"
            sleep $RETRY_DELAY
          fi
          
          # 1. –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ staging (–ö–ê–ö –í BUTLER)
          echo "üìÅ Thread ${{ matrix.thread-id }}: –î–æ–±–∞–≤–ª—è—é —Ñ–∞–π–ª—ã –≤ staging..."
          if ! git add src/content/posts/*.md; then
            echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: –û—à–∏–±–∫–∞ git add, –ø–æ–ø—ã—Ç–∫–∞ $i"
            continue
          fi
          
          # 2. Stash –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —á–∏—Å—Ç–æ–≥–æ pull (–ö–õ–Æ–ß–ï–í–ê–Ø BUTLER –°–¢–†–ê–¢–ï–ì–ò–Ø!)
          echo "üíæ Thread ${{ matrix.thread-id }}: –°–æ–∑–¥–∞—é stash..."
          if ! git stash push -m "Thread ${{ matrix.thread-id }} - attempt $i"; then
            echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: –û—à–∏–±–∫–∞ git stash, –ø–æ–ø—ã—Ç–∫–∞ $i"
            continue
          fi
          
          # 3. –î–µ–ª–∞–µ–º pull –ë–ï–ó rebase (–ö–ê–ö –í BUTLER)
          echo "‚¨áÔ∏è Thread ${{ matrix.thread-id }}: –î–µ–ª–∞—é git pull..."
          if ! git pull origin main; then
            echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: –û—à–∏–±–∫–∞ git pull, –ø–æ–ø—ã—Ç–∫–∞ $i"
            git stash pop || echo "Stash already applied"
            continue
          fi
          
          # 4. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è (–ö–ê–ö –í BUTLER)
          echo "üì§ Thread ${{ matrix.thread-id }}: –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é stash..."
          git stash pop || {
            echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: Stash —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω"
          }
          
          # 5. –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã —Å–Ω–æ–≤–∞ –Ω–∞ —Å–ª—É—á–∞–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ (–ö–ê–ö –í BUTLER)
          echo "üìÅ Thread ${{ matrix.thread-id }}: –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."
          if ! git add src/content/posts/*.md; then
            echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ git add, –ø–æ–ø—ã—Ç–∫–∞ $i"
            continue
          fi
          
          # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —á—Ç–æ –∫–æ–º–º–∏—Ç–∏—Ç—å
          if [[ -z $(git diff --cached) ]]; then
            echo "‚úÖ Thread ${{ matrix.thread-id }}: –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è commit (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –∑–∞–∫–æ–º–º–∏—á–µ–Ω–æ)"
            break
          fi
          
          # 7. –ö–æ–º–º–∏—Ç–∏–º (–ö–ê–ö –í BUTLER)
          echo "üíæ Thread ${{ matrix.thread-id }}: –°–æ–∑–¥–∞—é commit..."
          if ! git commit -m "üéØ Alpha-Strike v5.26-FIXED: Thread ${{ matrix.thread-id }} - $(date)"; then
            echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: –û—à–∏–±–∫–∞ git commit, –ø–æ–ø—ã—Ç–∫–∞ $i"
            continue
          fi
          
          # 8. Push —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ (–ö–ê–ö –í BUTLER)
          echo "‚¨ÜÔ∏è Thread ${{ matrix.thread-id }}: –û—Ç–ø—Ä–∞–≤–ª—è—é –≤ GitHub..."
          if git push origin main; then
            echo "‚úÖ Thread ${{ matrix.thread-id }}: SUCCESS! Ultra Butler git push —É—Å–ø–µ—à–µ–Ω –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ $i!"
            
            # –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –£–ë–ï–ñ–î–ê–ï–ú–°–Ø –ß–¢–û –§–ê–ô–õ–´ –†–ï–ê–õ–¨–ù–û –í GITHUB
            echo "üîç Thread ${{ matrix.thread-id }}: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê —Ñ–∞–π–ª–æ–≤ –≤ GitHub..."
            sleep 10  # –î–∞–µ–º –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ GitHub API –æ–±–Ω–æ–≤–∏—Ç—å—Å—è
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞–∫–æ–º–º–∏—Ç–∏–ª–∏
            COMMITTED_FILES=$(git diff --name-only HEAD~1 HEAD | grep "\.md$" || echo "")
            if [[ -n "$COMMITTED_FILES" ]]; then
              echo "‚úÖ Thread ${{ matrix.thread-id }}: –ó–∞–∫–æ–º–º–∏—á–µ–Ω—ã —Ñ–∞–π–ª—ã: $COMMITTED_FILES"
              
              # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ß–ï–†–ï–ó GITHUB API
              echo "üîç Thread ${{ matrix.thread-id }}: –ü—Ä–æ–≤–µ—Ä—è—é —á–µ—Ä–µ–∑ GitHub API..."
              for file in $COMMITTED_FILES; do
                filename=$(basename "$file")
                response_code=$(curl -s -o /dev/null -w "%{http_code}" \
                  -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                  "https://api.github.com/repos/terrminatorx4/blondeplace/contents/src/content/posts/$filename")
                
                if [ "$response_code" = "200" ]; then
                  echo "‚úÖ Thread ${{ matrix.thread-id }}: –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û: $filename —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ GitHub!"
                else
                  echo "‚ùå Thread ${{ matrix.thread-id }}: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: $filename –ù–ï –ù–ê–ô–î–ï–ù –≤ GitHub (–∫–æ–¥: $response_code)!"
                fi
              done
            else
              echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: –ù–µ —É–¥–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
            fi
            
            break
          else
            if [ "$i" -eq "$MAX_RETRIES" ]; then
              echo "‚ùå Thread ${{ matrix.thread-id }}: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê! –í—Å–µ $MAX_RETRIES Ultra Butler –ø–æ–ø—ã—Ç–æ–∫ –∏—Å—á–µ—Ä–ø–∞–Ω—ã"
              echo "‚ùå Thread ${{ matrix.thread-id }}: –§–ê–ô–õ–´ –ë–£–î–£–¢ –ü–û–¢–ï–†–Ø–ù–´!"
              exit 1
            fi
            echo "‚ö†Ô∏è Thread ${{ matrix.thread-id }}: Ultra Butler git push –Ω–µ—É–¥–∞—á–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ $i"
            # 9. –û—Ç–∫–∞—Ç –∫–æ–º–º–∏—Ç–∞ –∏ retry (–ö–ê–ö –í BUTLER!)
            echo "‚Ü©Ô∏è Thread ${{ matrix.thread-id }}: –û—Ç–∫–∞—Ç—ã–≤–∞—é commit –¥–ª—è retry..."
            git reset --hard HEAD~1
          fi
        done
    - name: REPORT GENERATION  
      run: |
        echo "‚úÖ –≠–°–ö–ê–î–†–û–ù #${{ matrix.thread-id }}: Alpha-Strike v5.26-FIXED –º–∏—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
        echo "üéØ Model: ${{ github.event.inputs.model_choice }}"
        echo "üìä Target articles: ${{ needs.prepare-matrix.outputs.articles-per-thread }}"
        echo "üéØ SEO: PERFECT OPTIMIZATION"
        echo "üîß baseNumber: 200000 (FIXED GitHub API limit)"
  quality-control:
    needs: alpha-strike-attack
    runs-on: ubuntu-latest
    if: always()  # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ jobs –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å
    steps:
    - name: Checkout repository  
      uses: actions/checkout@v4

    - name: QUALITY CONTROL v5.26-FIXED
      run: |
        echo "üîç –ö–û–ù–¢–†–û–õ–¨ –ö–ê–ß–ï–°–¢–í–ê ALPHA-STRIKE v5.26-FIXED"
        echo ""
        echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–û–ó–î–ê–ù–ù–´–• –°–¢–ê–¢–ï–ô:"
        find src/content/posts -name "post*.md" -newer .git/logs/HEAD | wc -l || echo "0"
        echo ""
        echo "üîó –ü–†–Ø–ú–´–ï –°–°–´–õ–ö–ò –ù–ê –ù–û–í–´–ï –°–¢–ê–¢–¨–ò:"
        find src/content/posts -name "post*.md" -newer .git/logs/HEAD | head -10 | while read file; do
          filename=$(basename "$file" .md)
          echo "  üìÑ https://blondeplace.netlify.app/blog/$filename/"
        done
        echo ""
        echo "üéØ SEO –ü–†–û–í–ï–†–ö–ê:"
        echo "  ‚úÖ Title –¥–ª–∏–Ω–∞: 40-45 —Å–∏–º–≤–æ–ª–æ–≤"
        echo "  ‚úÖ Description –¥–ª–∏–Ω–∞: 150-164 —Å–∏–º–≤–æ–ª–∞"  
        echo "  ‚úÖ Keywords: –¥–æ–±–∞–≤–ª–µ–Ω—ã"
        echo "  ‚úÖ –¢–æ—à–Ω–æ—Ç–∞: —Å–Ω–∏–∂–µ–Ω–∞"
        echo "  üîß baseNumber: 200000 (GitHub API –ª–∏–º–∏—Ç –æ–±–æ–π–¥–µ–Ω)"
  final-report:
    needs: [alpha-strike-attack, quality-control]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: FINAL REPORT v5.26-FIXED
      run: |
        echo "üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–Å–¢ ALPHA-STRIKE v5.26-FIXED"
        echo ""
        echo "‚úÖ –ú–ò–°–°–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –° PERFECT SEO + GitHub API FIX"
        echo "üéØ Title: 40-45 —Å–∏–º–≤–æ–ª–æ–≤ (CheckSite —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ)"
        echo "üéØ Description: 150-164 —Å–∏–º–≤–æ–ª–∞ (CheckSite —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ)"
        echo "üéØ Keywords: –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –º–µ—Ç–∞-—Ç–µ–≥–∏"
        echo "üéØ –¢–æ—à–Ω–æ—Ç–∞: —Å–Ω–∏–∂–µ–Ω–∞ —Å 8.25 –¥–æ <5"
        echo "üéØ Race protection: —É–ø—Ä–æ—â–µ–Ω–∞ (5-20s –≤–º–µ—Å—Ç–æ 30-120s)"
        echo "üîß GitHub API –ª–∏–º–∏—Ç: –û–ë–û–ô–î–ï–ù baseNumber = 200000"
        echo "üßµ –ü–æ—Ç–æ–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${{ github.event.inputs.threads }}"
        echo "üìä –°—Ç–∞—Ç–µ–π –∑–∞–ø—Ä–æ—à–µ–Ω–æ: ${{ github.event.inputs.target_articles }}"
        echo ""
        echo "üöÄ ALPHA-STRIKE v5.26-FIXED –ì–û–¢–û–í –ö –î–û–ú–ò–ù–ò–†–û–í–ê–ù–ò–Æ!" 