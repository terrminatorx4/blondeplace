---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props;
const { Content } = await post.render();

const ogImage = post.data.heroImage || 'https://blondeplace.netlify.app/og-image.jpg';
const pageUrl = `https://blondeplace.netlify.app/blog/${post.slug}/`;
---

<Layout title={post.data.title} description={post.data.description}>
  <!-- Дополнительные SEO мета-теги -->
  <meta slot="head" name="keywords" content={post.data.keywords} />
  <meta slot="head" name="author" content={post.data.author} />
  <meta slot="head" name="robots" content="index, follow" />
  <link slot="head" rel="canonical" href={pageUrl} />
  
  <!-- OpenGraph мета-теги -->
  <meta slot="head" property="og:title" content={post.data.title} />
  <meta slot="head" property="og:description" content={post.data.description} />
  <meta slot="head" property="og:image" content={ogImage} />
  <meta slot="head" property="og:url" content={pageUrl} />
  <meta slot="head" property="og:type" content="article" />
  <meta slot="head" property="og:site_name" content="BLONDE PLACE" />
  
  <!-- Twitter Card -->
  <meta slot="head" name="twitter:card" content="summary_large_image" />
  <meta slot="head" name="twitter:title" content={post.data.title} />
  <meta slot="head" name="twitter:description" content={post.data.description} />
  <meta slot="head" name="twitter:image" content={ogImage} />
  
  <!-- Structured Data -->
  <script slot="head" type="application/ld+json" set:html={JSON.stringify(post.data.schema)} />

  <article class="container">
    <header class="article-header">
      <h1 class="article-title">{post.data.title}</h1>
      <p class="article-description">{post.data.description}</p>
      <div class="article-meta">
        <time datetime={post.data.pubDate.toISOString()}>
          {new Date(post.data.pubDate).toLocaleDateString('ru-RU')}
        </time>
        <span>by {post.data.author}</span>
      </div>
    </header>

    {post.data.heroImage && (
      <div class="article-image">
        <img src={post.data.heroImage} alt={post.data.title} />
      </div>
    )}

    <div class="article-content">
      <Content />
    </div>
  </article>
</Layout>

<style>
.container {
  max-width: 800px;
  margin: 0 auto;
  padding: 2rem 1rem;
}

.article-header {
  margin-bottom: 3rem;
  text-align: center;
}

.article-title {
  font-size: 2.5rem;
  font-weight: 700;
  color: #2d1b69;
  margin-bottom: 1rem;
  line-height: 1.2;
}

.article-description {
  font-size: 1.2rem;
  color: #666;
  margin-bottom: 1.5rem;
  line-height: 1.5;
}

.article-meta {
  display: flex;
  justify-content: center;
  gap: 1rem;
  font-size: 0.9rem;
  color: #888;
}

.article-image {
  margin-bottom: 3rem;
  text-align: center;
}

.article-image img {
  max-width: 100%;
  border-radius: 12px;
  box-shadow: 0 8px 30px rgba(0,0,0,0.1);
}

.article-content {
  line-height: 1.8;
  font-size: 1.1rem;
  color: #333;
}

.article-content h2,
.article-content h3 {
  color: #2d1b69;
  margin: 2rem 0 1rem 0;
}

.article-content p {
  margin-bottom: 1.5rem;
}

@media (max-width: 768px) {
  .article-title {
    font-size: 2rem;
  }
}
</style>