#!/usr/bin/env node
// BlondePlace Beauty Content Factory
// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –æ –∫—Ä–∞—Å–æ—Ç–µ, —É—Ö–æ–¥–µ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏ –∏ —Å–∞–ª–æ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö

import { GoogleGenerativeAI } from '@google/generative-ai';
import fs from 'fs/promises';
import path from 'path';

// ===== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø BLONDEPLACE =====
const BRAND_CONFIG = {
    brand: "BlondePlace",
    domain: "blondeplace.ru",
    blog_domain: "blondeplace.netlify.app",
    salon_name: "BlondePlace Beauty Studio",
    specialization: "–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–∏ –≤–æ–ª–æ—Å, —Å—Ç—Ä–∏–∂–∫–∞—Ö, –º–∞–Ω–∏–∫—é—Ä–µ –∏ beauty-–ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö",
    author: "BlondePlace Beauty Expert",
    location: "–†–æ—Å—Å–∏—è",
    services: [
        "–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –≤–æ–ª–æ—Å (–±–ª–æ–Ω–¥, –æ–º–±—Ä–µ, —à–∞—Ç—É—à, –±–∞–ª–∞—è–∂)",
        "–°—Ç—Ä–∏–∂–∫–∏ –∏ —É–∫–ª–∞–¥–∫–∏",
        "–ö–µ—Ä–∞—Ç–∏–Ω–æ–≤–æ–µ –≤—ã–ø—Ä—è–º–ª–µ–Ω–∏–µ –≤–æ–ª–æ—Å",
        "–ë–æ—Ç–æ–∫—Å –¥–ª—è –≤–æ–ª–æ—Å",
        "–ú–∞–Ω–∏–∫—é—Ä –∏ –ø–µ–¥–∏–∫—é—Ä",
        "–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ –Ω–æ–≥—Ç–µ–π",
        "–£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π –ª–∏—Ü–∞",
        "–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã",
        "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ beauty-—ç–∫—Å–ø–µ—Ä—Ç–æ–≤"
    ],
    target_audience: "–ñ–µ–Ω—â–∏–Ω—ã 18-45 –ª–µ—Ç, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ—Å—è –∫—Ä–∞—Å–æ—Ç–æ–π, —É—Ö–æ–¥–æ–º –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç—Ä–µ–Ω–¥–∞–º–∏",
    tone: "–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π",
    expertise: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –æ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º"
};

// ===== –°–ò–°–¢–ï–ú–ù–´–ï –ü–†–û–ú–ü–¢–´ –î–õ–Ø BEAUTY –ö–û–ù–¢–ï–ù–¢–ê =====
const BEAUTY_SYSTEM_PROMPTS = {
    hair_care: `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —É—Ö–æ–¥—É –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏ –≤ —Å–∞–ª–æ–Ω–µ –∫—Ä–∞—Å–æ—Ç—ã ${BRAND_CONFIG.salon_name}. 
    –ü–∏—à–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –æ —É—Ö–æ–¥–µ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è –∑–Ω–∞–Ω–∏—è —Ç—Ä–∏—Ö–æ–ª–æ–≥–∏–∏ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫.
    –£–ø–æ–º–∏–Ω–∞–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã. –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–≤–µ—Ç–∞—Ö.`,
    
    hair_coloring: `–¢—ã –º–∞—Å—Ç–µ—Ä-–∫–æ–ª–æ—Ä–∏—Å—Ç —Å 10+ –ª–µ—Ç –æ–ø—ã—Ç–∞ –≤ —Å–∞–ª–æ–Ω–µ ${BRAND_CONFIG.salon_name}.
    –°–æ–∑–¥–∞–≤–∞–π —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –æ–± –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–∏ –≤–æ–ª–æ—Å, —Ç–µ—Ö–Ω–∏–∫–∞—Ö –∫–æ–ª–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è, —Ç—Ä–µ–Ω–¥–∞—Ö.
    –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å–≤–µ—â–∞–π –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å –±–ª–æ–Ω–¥–æ–º, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∞–ª–æ–Ω–∞.`,
    
    beauty_tips: `–¢—ã beauty-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã ${BRAND_CONFIG.salon_name}.
    –ü–∏—à–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç–∞—Ç—å–∏ —Å —Å–æ–≤–µ—Ç–∞–º–∏ –∫—Ä–∞—Å–æ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –¥–æ–º–∞ –∏ –≤ —Å–∞–ª–æ–Ω–µ.
    –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–∞—Ö –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–∞—Ö.`,
    
    nail_care: `–¢—ã –º–∞—Å—Ç–µ—Ä –º–∞–Ω–∏–∫—é—Ä–∞ –≤ –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–º —Å–∞–ª–æ–Ω–µ ${BRAND_CONFIG.salon_name}.
    –°–æ–∑–¥–∞–≤–∞–π —Å—Ç–∞—Ç—å–∏ –æ nail-–∞—Ä—Ç–µ, —É—Ö–æ–¥–µ –∑–∞ –Ω–æ–≥—Ç—è–º–∏, —Ç—Ä–µ–Ω–¥–∞—Ö –º–∞–Ω–∏–∫—é—Ä–∞ –∏ –ø–µ–¥–∏–∫—é—Ä–∞.
    –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–π –≤–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –∫ nail-—Å–µ—Ä–≤–∏—Å—É.`,
    
    salon_procedures: `–¢—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Å–∞–ª–æ–Ω–Ω—ã–º –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º –≤ ${BRAND_CONFIG.salon_name}.
    –ü–∏—à–∏ –æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö beauty-–ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö, –∏—Ö —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö.
    –û–±—ä—è—Å–Ω—è–π —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–æ–º–∞—à–Ω–∏–º –∏ —Å–∞–ª–æ–Ω–Ω—ã–º —É—Ö–æ–¥–æ–º.`
};

// ===== BEAUTY –ö–ê–¢–ï–ì–û–†–ò–ò =====
const BEAUTY_CATEGORIES = [
    'hair-care', 'hair-coloring', 'hairstyles', 'blonde-trends', 'hair-treatments',
    'nail-care', 'manicure', 'pedicure', 'skincare', 'makeup', 'beauty-tips',
    'salon-news', 'hair-products', 'beauty-trends', 'seasonal-beauty'
];

// ===== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø AI =====
const MODEL_CHOICE = process.env.MODEL_CHOICE || 'gemini';
const API_KEY_CURRENT = process.env.API_KEY_CURRENT || process.env.GEMINI_API_KEY;
const BATCH_SIZE = parseInt(process.env.BATCH_SIZE) || 5;
const THREAD_ID = process.env.THREAD_ID || '1';
const TOTAL_THREADS = parseInt(process.env.TOTAL_THREADS) || 1;

if (!API_KEY_CURRENT) {
    console.error('‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GEMINI_API_KEY –∏–ª–∏ API_KEY_CURRENT');
    process.exit(1);
}

// ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø AI =====
const genAI = new GoogleGenerativeAI(API_KEY_CURRENT);
const model = genAI.getGenerativeModel({ 
    model: "gemini-1.5-flash",
    generationConfig: {
        temperature: 0.8,
        topK: 40,
        topP: 0.95,
        maxOutputTokens: 8192,
    }
});

// ===== –ó–ê–ì–†–£–ó–ö–ê –¢–û–ü–ò–ö–û–í =====
async function loadTopics() {
    try {
        const topicsContent = await fs.readFile('topics.txt', 'utf-8');
        const topics = topicsContent
            .split('\n')
            .filter(line => line.trim() && !line.startsWith('#'))
            .map(line => line.trim());
        
        if (topics.length === 0) {
            console.log('üìù –§–∞–π–ª topics.txt –ø—É—Å—Ç. –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–µ beauty —Ç–æ–ø–∏–∫–∏...');
            return [
                '–ö–∞–∫ —É—Ö–∞–∂–∏–≤–∞—Ç—å –∑–∞ –±–ª–æ–Ω–¥–æ–º –¥–æ–º–∞',
                '–¢—Ä–µ–Ω–¥—ã –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏—è –≤–æ–ª–æ—Å 2024',
                '–°–µ–∫—Ä–µ—Ç—ã –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ–≥–æ –º–∞–Ω–∏–∫—é—Ä–∞',
                '–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä–∏–∂–∫—É',
                '–£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π –ª–∏—Ü–∞ –∑–∏–º–æ–π'
            ];
        }
        
        return topics;
    } catch (error) {
        console.log('üìù –§–∞–π–ª topics.txt –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é —Å –±–∞–∑–æ–≤—ã–º–∏ —Ç–æ–ø–∏–∫–∞–º–∏...');
        const defaultTopics = [
            '# Beauty —Ç–æ–ø–∏–∫–∏ –¥–ª—è BlondePlace',
            '# –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ —Ç–æ–ø–∏–∫–∏ –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É',
            '',
            '–ö–∞–∫ —É—Ö–∞–∂–∏–≤–∞—Ç—å –∑–∞ –±–ª–æ–Ω–¥–æ–º –¥–æ–º–∞',
            '–¢—Ä–µ–Ω–¥—ã –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏—è –≤–æ–ª–æ—Å 2024',
            '–°–µ–∫—Ä–µ—Ç—ã –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ–≥–æ –º–∞–Ω–∏–∫—é—Ä–∞',
            '–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä–∏–∂–∫—É –¥–ª—è —Ç–∏–ø–∞ –ª–∏—Ü–∞',
            '–£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π –ª–∏—Ü–∞ –≤ –∑–∏–º–Ω–∏–π –ø–µ—Ä–∏–æ–¥'
        ].join('\n');
        
        await fs.writeFile('topics.txt', defaultTopics);
        return [];
    }
}

// ===== –ì–ï–ù–ï–†–ê–¶–ò–Ø BEAUTY –ö–û–ù–¢–ï–ù–¢–ê =====
async function generateBeautyContent(topic) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–æ–ø–∏–∫–∞
    const category = categorizeBeautyTopic(topic);
    const systemPrompt = BEAUTY_SYSTEM_PROMPTS[category] || BEAUTY_SYSTEM_PROMPTS.beauty_tips;
    
    const prompt = `${systemPrompt}

–¢–ï–ú–ê: "${topic}"

–°–æ–∑–¥–∞–π —ç–∫—Å–ø–µ—Ä—Ç–Ω—É—é —Å—Ç–∞—Ç—å—é –¥–ª—è –±–ª–æ–≥–∞ —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã ${BRAND_CONFIG.salon_name} (${BRAND_CONFIG.domain}).

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
‚úÖ –û–±—ä–µ–º: 1500-2500 —Å–ª–æ–≤
‚úÖ –°—Ç–∏–ª—å: —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π, –Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–π
‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –∑–∞–≥–æ–ª–æ–≤–∫–∏ H2, H3, —Å–ø–∏—Å–∫–∏, –≤—ã–¥–µ–ª–µ–Ω–∏—è
‚úÖ SEO: –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
‚úÖ –≠–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å: –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
‚úÖ –ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å: –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å
‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å: —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã –∏ –º–µ—Ç–æ–¥–∏–∫–∏

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –í–ö–õ–Æ–ß–ò:
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –æ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º
‚Ä¢ –†–∞–∑–ª–∏—á–∏–µ –º–µ–∂–¥—É –¥–æ–º–∞—à–Ω–∏–º –∏ —Å–∞–ª–æ–Ω–Ω—ã–º —É—Ö–æ–¥–æ–º
‚Ä¢ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö
‚Ä¢ –ö–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É

–§–û–†–ú–ê–¢ –°–¢–ê–¢–¨–ò:
1. –í–≤–µ–¥–µ–Ω–∏–µ (–ø–æ—á–µ–º—É —ç—Ç–∞ —Ç–µ–º–∞ –≤–∞–∂–Ω–∞)
2. –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã —Å –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
3. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
4. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã
5. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ —Å –ø—Ä–∏–∑—ã–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é

–ü–∏—à–∏ –æ—Ç –ª–∏—Ü–∞ —ç–∫—Å–ø–µ—Ä—Ç–∞ —Å–∞–ª–æ–Ω–∞ ${BRAND_CONFIG.salon_name}. –ò—Å–ø–æ–ª—å–∑—É–π "–º—ã", "–Ω–∞—à —Å–∞–ª–æ–Ω", "–Ω–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞".
–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ —É–ø–æ–º–∏–Ω–∞–π, —á—Ç–æ –≤ —Å–∞–ª–æ–Ω–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.

–í–ê–ñ–ù–û: –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä—è–º—É—é —Ä–µ–∫–ª–∞–º—É. –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–µ —Å –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤—ã–º–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ —Å–∞–ª–æ–Ω–∞.`;

    try {
        console.log(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é beauty –∫–æ–Ω—Ç–µ–Ω—Ç: "${topic}"`);
        
        const result = await model.generateContent(prompt);
        const response = await result.response;
        const text = response.text();
        
        if (!text || text.length < 500) {
            throw new Error('–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç');
        }
        
        console.log(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ${text.length} —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è "${topic}"`);
        return text;
        
    } catch (error) {
        console.error(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è "${topic}":`, error.message);
        return null;
    }
}

// ===== –ö–ê–¢–ï–ì–û–†–ò–ó–ê–¶–ò–Ø BEAUTY –¢–û–ü–ò–ö–û–í =====
function categorizeBeautyTopic(topic) {
    const topicLower = topic.toLowerCase();
    
    if (topicLower.includes('–æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ') || topicLower.includes('–±–ª–æ–Ω–¥') || 
        topicLower.includes('—Ü–≤–µ—Ç') || topicLower.includes('–º–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ') ||
        topicLower.includes('–æ–º–±—Ä–µ') || topicLower.includes('–±–∞–ª–∞—è–∂')) {
        return 'hair_coloring';
    }
    
    if (topicLower.includes('–≤–æ–ª–æ—Å') || topicLower.includes('—É—Ö–æ–¥ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏') ||
        topicLower.includes('—à–∞–º–ø—É–Ω—å') || topicLower.includes('–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä')) {
        return 'hair_care';
    }
    
    if (topicLower.includes('–º–∞–Ω–∏–∫—é—Ä') || topicLower.includes('–ø–µ–¥–∏–∫—é—Ä') || 
        topicLower.includes('–Ω–æ–≥—Ç') || topicLower.includes('nail')) {
        return 'nail_care';
    }
    
    if (topicLower.includes('–ø—Ä–æ—Ü–µ–¥—É—Ä') || topicLower.includes('—Å–∞–ª–æ–Ω') ||
        topicLower.includes('–∫–µ—Ä–∞—Ç–∏–Ω') || topicLower.includes('–±–æ—Ç–æ–∫—Å')) {
        return 'salon_procedures';
    }
    
    return 'beauty_tips';
}

// ===== –ì–ï–ù–ï–†–ê–¶–ò–Ø SEO –î–ê–ù–ù–´–• =====
async function generateBeautySEO(topic, category) {
    const seoPrompt = `–°–æ–∑–¥–∞–π SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç—å–∏ —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã –Ω–∞ —Ç–µ–º—É: "${topic}"

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- Title: 50-60 —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞–π "${BRAND_CONFIG.brand}"
- Description: 140-160 —Å–∏–º–≤–æ–ª–æ–≤, –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
- Keywords: 5-7 –∫–ª—é—á–µ–≤—ã—Ö —Ñ—Ä–∞–∑ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
- –£—á–∏—Ç—ã–≤–∞–π beauty-—Ç–µ–º–∞—Ç–∏–∫—É –∏ –º–µ—Å—Ç–Ω—É—é —Å–ø–µ—Ü–∏—Ñ–∏–∫—É

–û—Ç–≤–µ—Ç –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:
{
  "title": "...",
  "description": "...", 
  "keywords": "..."
}`;

    try {
        const result = await model.generateContent(seoPrompt);
        const response = await result.response;
        const text = response.text();
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
        const jsonMatch = text.match(/\{[\s\S]*\}/);
        if (jsonMatch) {
            return JSON.parse(jsonMatch[0]);
        }
        
        // Fallback SEO
        return {
            title: `${topic} | –°–æ–≤–µ—Ç—ã —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ ${BRAND_CONFIG.brand}`,
            description: `–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ —Ç–µ–º–µ "${topic}" –æ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤ —Å–∞–ª–æ–Ω–∞ ${BRAND_CONFIG.brand}. –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã.`,
            keywords: `${topic}, —Å–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã, ${BRAND_CONFIG.brand}, beauty —Å–æ–≤–µ—Ç—ã, —É—Ö–æ–¥ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏`
        };
        
    } catch (error) {
        console.warn(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SEO –¥–ª—è "${topic}". –ò—Å–ø–æ–ª—å–∑—É—é fallback.`);
        return {
            title: `${topic} | ${BRAND_CONFIG.brand}`,
            description: `–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –æ—Ç —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã ${BRAND_CONFIG.brand}. ${topic} - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.`,
            keywords: `${topic}, —Å–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã, beauty, —É—Ö–æ–¥, ${BRAND_CONFIG.brand}`
        };
    }
}

// ===== –°–û–ó–î–ê–ù–ò–ï FRONTMATTER =====
async function createBeautyFrontmatter(topic, content, seoData) {
    const category = categorizeBeautyTopic(topic);
    const slug = topic.toLowerCase()
        .replace(/[^\w\s-]/g, '')
        .replace(/\s+/g, '-')
        .replace(/-+/g, '-')
        .replace(/^-|-$/g, '');
    
    const heroImage = `/images/beauty/${category}/${slug}.jpg`;
    const currentDate = new Date().toISOString();
    
    // Schema.org –¥–ª—è beauty –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const schema = {
        "@context": "https://schema.org",
        "@type": "Article",
        headline: seoData.title,
        description: seoData.description,
        image: `https://${BRAND_CONFIG.blog_domain}${heroImage}`,
        author: {
            "@type": "Organization",
            name: BRAND_CONFIG.salon_name,
            url: `https://${BRAND_CONFIG.domain}`
        },
        publisher: {
            "@type": "Organization", 
            name: BRAND_CONFIG.brand,
            logo: {
                "@type": "ImageObject",
                url: `https://${BRAND_CONFIG.domain}/logo.png`
            }
        },
        datePublished: currentDate,
        dateModified: currentDate,
        mainEntityOfPage: {
            "@type": "WebPage",
            "@id": `https://${BRAND_CONFIG.blog_domain}/blog/${slug}/`
        },
        about: [
            {
                "@type": "Thing",
                name: "Beauty Care"
            },
            {
                "@type": "Thing", 
                name: "Hair Care"
            }
        ]
    };
    
    const frontmatter = `---
title: ${JSON.stringify(seoData.title)}
description: ${JSON.stringify(seoData.description)}
keywords: ${JSON.stringify(seoData.keywords)}
pubDate: ${JSON.stringify(currentDate)}
author: ${JSON.stringify(BRAND_CONFIG.author)}
heroImage: ${JSON.stringify(heroImage)}
category: ${JSON.stringify(category)}
schema: ${JSON.stringify(schema)}
---

${content}
`;
    
    return frontmatter;
}

// ===== –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø =====
async function main() {
    try {
        console.log(`üé® === BLONDEPLACE BEAUTY FACTORY ===`);
        console.log(`üíÑ –°–∞–ª–æ–Ω: ${BRAND_CONFIG.salon_name}`);
        console.log(`üåê –î–æ–º–µ–Ω: ${BRAND_CONFIG.domain}`);
        console.log(`üì± –ü–æ—Ç–æ–∫: #${THREAD_ID} | –ü–∞–∫–µ—Ç: ${BATCH_SIZE} —Å—Ç–∞—Ç–µ–π`);
        console.log(`ü§ñ –ú–æ–¥–µ–ª—å: ${MODEL_CHOICE}`);
        
        const allTopics = await loadTopics();
        
        if (allTopics.length === 0) {
            console.log('üìù –¢–æ–ø–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª topics.txt');
            return;
        }
        
        // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ–ø–∏–∫–∏ –ø–æ –ø–æ—Ç–æ–∫–∞–º
        const threadTopics = allTopics.filter((_, index) => 
            index % TOTAL_THREADS === (parseInt(THREAD_ID) - 1)
        );
        
        const topicsToProcess = threadTopics.slice(0, BATCH_SIZE);
        
        if (topicsToProcess.length === 0) {
            console.log(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] üì≠ –ù–µ—Ç —Ç–æ–ø–∏–∫–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏`);
            return;
        }
        
        console.log(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] üìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é ${topicsToProcess.length} —Ç–æ–ø–∏–∫–æ–≤...`);
        
        let successCount = 0;
        
        for (const topic of topicsToProcess) {
            try {
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
                const content = await generateBeautyContent(topic);
                if (!content) continue;
                
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SEO
                const category = categorizeBeautyTopic(topic);
                const seoData = await generateBeautySEO(topic, category);
                
                // –°–æ–∑–¥–∞–µ–º frontmatter
                const fullContent = await createBeautyFrontmatter(topic, content, seoData);
                
                // –í–∞–ª–∏–¥–∞—Ü–∏—è YAML
                try {
                    const matter = await import('gray-matter');
                    matter.default(fullContent);
                    console.log(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] [‚úî] YAML –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –¥–ª—è "${topic}"`);
                } catch (yamlError) {
                    console.error(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] [‚ùå] YAML –æ—à–∏–±–∫–∞ –≤ "${topic}": ${yamlError.message}`);
                    continue;
                }
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
                const slug = topic.toLowerCase()
                    .replace(/[^\w\s-]/g, '')
                    .replace(/\s+/g, '-')
                    .replace(/-+/g, '-')
                    .replace(/^-|-$/g, '');
                
                const filePath = `src/content/posts/${slug}.md`;
                await fs.writeFile(filePath, fullContent);
                
                console.log(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] ‚úÖ –°–æ–∑–¥–∞–Ω: ${filePath}`);
                successCount++;
                
                // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–º–∏
                await new Promise(resolve => setTimeout(resolve, 2000));
                
            } catch (error) {
                console.error(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ "${topic}":`, error.message);
            }
        }
        
        console.log(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] üéØ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! –°–æ–∑–¥–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: ${successCount}/${topicsToProcess.length}`);
        
    } catch (error) {
        console.error(`[–ü–æ—Ç–æ–∫ #${THREAD_ID}] üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:`, error);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ —Ñ–∞–±—Ä–∏–∫–∏
if (import.meta.url === `file://${process.argv[1]}`) {
    main();
}
